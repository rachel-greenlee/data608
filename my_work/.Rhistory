knitr::opts_chunk$set(message=FALSE, warning=FALSE, out.width = "100%")
library('dplyr')
library('ggplot2')
library('kableExtra')
library('formattable')
mpeach <- "#FBAA82"
mteal <- "#73A2AC"
mdarkteal <- "#OB5D69"
mgray <- "#4C4C4C"
# set plot theme for assignment
my_plot_theme <- list(
theme_classic() +
theme(plot.background = element_rect(fill = "#F3F2E8"),
panel.background = element_rect(fill = "#F3F2E8"),
panel.grid.major.x = element_line(color = "white"),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold")))
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
kable((head(inc, 10)), format = 'markdown')
summary(inc)
kable((head(inc, 10)), format = 'markdown')
kable((tail(inc, 10)), format = 'markdown')
kable(inc %>%
count(State, sort = TRUE),
format = 'markdown')
kable(inc %>%
count(Industry, sort = TRUE),
format = 'markdown')
# create 2-variable df of States & counts
state_freq <- inc %>% count(State, sort = TRUE)
# sort df by count so graph displays ordered and not alphabetically
state_freq$State <- factor(state_freq$State,
levels = state_freq$State[order(state_freq$n, decreasing = FALSE)])
# plot generation
ggplot(data = state_freq, aes(x = n, y = State)) +
geom_col(fill=mpeach) +
labs(title = "California, Texas, and New York have the Most Companies",
subtitle = "with California having 181% (314) more companies than second-place Texas",
x="# of Companies in the Ranking",
y="State") +
scale_x_continuous(limits = c(0, 800),
expand = c(.01, 0.5),
breaks = seq(0, 800, 100)) +
geom_text(
aes(x = n, label = n),
size = 3,
color = mgray, hjust = 0) +
my_plot_theme
# filter for just NY data
# filter for complete cases (they all were w/o NAs)
# plot to show median across industries in NY
inc %>%
filter(State == "NY", complete.cases(.)) %>%
ggplot(aes(x = reorder(Industry, Employees, median), y = Employees)) +
geom_boxplot(fill = mpeach, outlier.color = mteal, outlier.size = 2) +
coord_flip() +
labs(title = "NY Companies by # of Employees by Industry",
subtitle = "graph does not show two outlyers (Coty & Sutherland)",
x="Industry",
y="# of Employees per Company in NY") +
ylim(NA, 1000) +
my_plot_theme
# show counts sorted high to low of companies within each industry in NY
kable(inc %>%
filter(State == "NY") %>%
count(Industry, sort = TRUE),
format = 'markdown')
inc %>%
filter(complete.cases(.)) %>%
group_by(Industry) %>%
summarize(rev_tot = sum(Revenue), emp_tot = sum(Employees)) %>%
mutate(rev_per_emp = rev_tot/emp_tot) %>%
ggplot(aes(x = reorder(Industry, rev_per_emp), y = rev_per_emp)) +
geom_bar(stat = "identity", fill = mpeach) +
coord_flip() +
labs(title = "Revenue per Employee by Industry",
subtitle = "total revenue of industry / total count employees of industry",
x = "Industry",
y = "Revenue per Employee") +
scale_y_continuous(limits = c(0, 1350000),
labels = scales::label_dollar()) +
geom_text(aes(label = currency(rev_per_emp, digits = 0L)),
size=3,
color = mgray,
hjust = -0.1) +
my_plot_theme
library(tinytex)
install.packages("tinytex")
updates.packages(ask = FALSE< checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
library(tinytex)
library(tinytex)
tinytex::tlmgr_update()
library('dplyr')
library('ggplot2')
library('kableExtra')
library('formattable')
library('TinyTeX')
library('dplyr')
library('ggplot2')
library('kableExtra')
library('formattable')
library('tinytex')
mpeach <- "#FBAA82"
mteal <- "#73A2AC"
mdarkteal <- "#OB5D69"
mgray <- "#4C4C4C"
# set plot theme for assignment
my_plot_theme <- list(
theme_classic() +
theme(plot.background = element_rect(fill = "#F3F2E8"),
panel.background = element_rect(fill = "#F3F2E8"),
panel.grid.major.x = element_line(color = "white"),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold")))
fmtutil --all
remove.packages("tinytex", lib="~/R/win-library/4.0")
install.packages('tinytex')
library('tinytex')
tinytex::install_tinytex()
shiny::runApp('assign3_shiny')
runApp('assign3_shiny/template.R')
runApp('assign3_shiny/template.R')
mort <- read.csv("https://github.com/charleyferrari/CUNY_DATA_608/tree/master/module3/data", header = TRUE)
View(mort)
# read in data
mort <- read.csv("https://github.com/charleyferrari/CUNY_DATA_608/blob/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
View(inc)
mort <- read.csv("https://github.com/charleyferrari/CUNY_DATA_608/blob/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
View(mort)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
View(mort)
mort_2010 <- subset(mort, year == "2010")
mort_2010 <- subset(mort, Year == "2010")
View(mort_2010)
library(dplyr)
mort <- mort %>%
group_by(ICD.Chapter)
View(mort)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
summarize(new_crude = (Deaths/Population) * 100,000)
knitr::opts_chunk$set(echo = TRUE)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
summarize(new_crude = (Deaths/Population) * 100,000)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
summarize(new_crude = (Deaths//Population) * 100000)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
summarize(new_crude = (Deaths/Population) * 100000)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
summarize(new_crude = ([Deaths]/[Population]) * 100000)
?summarize
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
summarize(new_crude = (Deaths/Population) * 100000)
View(mort)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
summarize(new_crude = (Deaths/Population) * 100000)
?summarize
View(mort)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort <- mort %>%
group_by(State, ICD.Chapter) #%>%
#summarize(new_crude = (Deaths/Population) * 100000)
View(mort)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
mutat(new_crude = (Deaths/Population) * 100000)
mort <- mort %>%
group_by(State, ICD.Chapter) %>%
mutate(new_crude = (Deaths/Population) * 100000)
View(mort)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort_2010 <- subset(mort, Year == "2010")
mort_2010 <- mort_2010 %>%
group_by(State, ICD.Chapter) %>%
mutate(new_crude = (Deaths/Population) * 100000)
View(mort_2010)
mort_2010 <- mort_2010 %>%
group_by(State, ICD.Chapter) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
#mutate(new_crude = (Deaths/Population) * 100000)
View(mort_2010)
tot_pop
mort_2010 <- mort_2010 %>%
group_by(State, ICD.Chapter) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort_2010 <- subset(mort, Year == "2010")
mort_2010 <- mort_2010 %>%
group_by(State, ICD.Chapter) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
mort_2010$crude_rate <- (mort_2010$tot_deaths / mort_2010$tot_pop) * 100000
#mutate(new_crude = (Deaths/Population) * 100000)
View(mort_2010)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort_2010 <- subset(mort, Year == "2010")
mort_2010 <- mort_2010 %>%
group_by(State, ICD.Chapter) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
mort_2010$crude_rate <- round((mort_2010$tot_deaths / mort_2010$tot_pop) * 100000, 4)
#mutate(new_crude = (Deaths/Population) * 100000)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort_2010 <- subset(mort, Year == "2010")
mort_2010 <- mort_2010 %>%
group_by(State, ICD.Chapter) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
mort_2010$crude_rate <- round((mort_2010$tot_deaths / mort_2010$tot_pop) * 100000, 2)
#mutate(new_crude = (Deaths/Population) * 100000)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort_2010 <- subset(mort, Year == "2010")
mort_2010 <- mort_2010 %>%
group_by(State, ICD.Chapter) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
mort_2010$crude_rate <- round((mort_2010$tot_deaths / mort_2010$tot_pop) * 100000, 4)
#mutate(new_crude = (Deaths/Population) * 100000)
View(mort)
runApp('assign3_shiny')
runApp('assign3_shiny')
library(shiny)
library(dplyr)
library(ggplot)
runApp()
runApp('assign3_shiny')
runApp('assign3_shiny')
runApp('assign3_shiny')
View(mort_2010)
runApp('assign3_shiny')
runApp('assign3_shiny')
runApp('assign3_shiny')
runApp('assign3_shiny')
ggplot(mort_2010, aes(x = crude_rate, y = State) +
geom_bar() +
ggtitle("2010 Crude Mortality Rates, by State") +
xlab("Crude Rate (Per 100,000)") +
ylab("State"))
ggplot(mort_2010, aes(x = crude_rate, y = State) +
geom_bar() +
labs(title = "2010 Crude Mortality Rates, by State",
x = "Crude Rate (Per 100,000)",
y ="State"))
ggplot(mort_2010, aes(x = crude_rate, y = State) +
geom_bar(stat = "identity") +
labs(title = "2010 Crude Mortality Rates, by State",
x = "Crude Rate (Per 100,000)",
y ="State"))
ggplot(mort_2010, aes(x = crude_rate, y = State)) +
geom_bar(stat = "identity") +
labs(title = "2010 Crude Mortality Rates, by State",
x = "Crude Rate (Per 100,000)",
y ="State")
ggplot(mort_2010, aes(x = crude_rate, y = reorder(State, crude_rate)) +
geom_bar(stat = "identity") +
labs(title = "2010 Crude Mortality Rates, by State",
x = "Crude Rate (Per 100,000)",
y ="State")
ggplot(mort_2010, aes(x = crude_rate, y = reorder(State, crude_rate))) +
geom_bar(stat = "identity") +
labs(title = "2010 Crude Mortality Rates, by State",
x = "Crude Rate (Per 100,000)",
y ="State")
runApp('assign3_shiny')
runApp('assign3_shiny')
knitr::opts_chunk$set(echo = TRUE)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
mort_national <- mort %>%
group_by(Year, ICD.Chapter) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
View(mort_national)
View(mort)
# create national average crude rates by cause over the years
mort_national <- mort %>%
group_by(ICD.Chapter, Year) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
# create new variable crude_rate to recalculate the crude rate at this grouping level
mort_2010$crude_rate <- round((mort_2010$tot_deaths / mort_2010$tot_pop) * 100000, 4)
View(mort_national)
View(mort)
mort_national <- mort %>%
group_by(ICD.Chapter) %>%
summarize(sum = sum(Deaths)
View(mort_national)
View(mort_national)
View(mort)
# create national average crude rates by cause over the years
mort_national <- mort %>%
group_by(ICD.Chapter,Year) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
# create new variable crude_rate to recalculate the crude rate at this grouping level
#mort_2010$crude_rate <- round((mort_2010$tot_deaths / mort_2010$tot_pop) * 100000, 4)
View(mort_national)
mort_national$crude_rate <- round((mort_national$tot_deaths / mort_national$tot_pop) * 100000, 4)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
# collapse State rows
mort_national <- mort %>%
group_by(ICD.Chapter,Year) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
View(mort_national)
?left_join
mort_national$join <- c(mort_national$ICD.Chapter, mort_national$Year)
# create column to join on
mort_national$join <- string(c(mort_national$ICD.Chapter, mort_national$Year))
mort_national$join <- c(mort_national$ICD.Chapter, mort_national$Year)
# create column to join on
cols <- c( 'ICD.Chapter' , 'Year')
# create a new column `x` with the three columns collapsed together
mort_national$join <- apply( mort_national[ , cols] , 1 , paste , collapse = "-" )
View(mort_national)
mort$join <- apply( mort[ , cols] , 1 , paste , collapse = "-" )
# join with state level data in new df
mort_comp <- left_join(mort, mort_nation, by = join)
# join with state level data in new df
mort_comp <- left_join(mort, mort_national, by = join)
View(mort)
View(mort_national)
View(mort)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
# collapse State rows
mort_national <- mort %>%
group_by(ICD.Chapter,Year) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
# create national average crude rates by cause over the years
mort_national$crude_rate <- round((mort_national$tot_deaths / mort_national$tot_pop) * 100000, 4)
# columns we want to paste together in both dataframes
cols <- c( 'ICD.Chapter' , 'Year')
# create that new column in mort_national
mort_national$join <- apply( mort_national[ , cols] , 1 , paste , collapse = "-" )
# create that new column in mort
mort$join <- apply( mort[ , cols] , 1 , paste , collapse = "-" )
# join with state level data in new df
mort_comp <- left_join(mort, mort_national, by = join)
mort_comp <- left_join(mort, mort_national, by = "join")
View(mort_comp)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
# collapse State rows
mort_national <- mort %>%
group_by(ICD.Chapter,Year) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
# create national average crude rates by cause over the years
mort_national$national_crude_rate <- round((mort_national$tot_deaths / mort_national$tot_pop) * 100000, 4)
# columns we want to paste together in both dataframes
cols <- c( 'ICD.Chapter' , 'Year')
# create that new column in mort_national
mort_national$join <- apply( mort_national[ , cols] , 1 , paste , collapse = "-" )
# create that new column in mort
mort$join <- apply( mort[ , cols] , 1 , paste , collapse = "-" )
# join with state level data in new df
mort_comp <- left_join(mort, mort_national, by = "join")
View(mort_comp)
mort_comp$nat_diff <- round(mort_comp$Crude.Rate/mort_comp$national_crude_rate, 4)
mort_comp$nat_diff <- round(mort_comp$national_crude_rate - mort_comp$Crude.Rate, 4)
mort_comp_test <- mort_comp %>%
subset(State == "Wisconsin",
ICD.Chapter.x == "Certain infectious and parasitic diseases
")
mort_comp_test <- mort_comp %>%
filter(State == "Wisconsin",
ICD.Chapter.x == "Certain infectious and parasitic diseases")
View(mort_comp_test)
# remove later
mort_comp_test <- mort_comp %>%
filter(State == "WI",
ICD.Chapter.x == "Certain infectious and parasitic diseases")
View(mort_comp_test)
# remove later
mort_comp_test <- mort_comp %>%
filter(State == "WI",
ICD.Chapter.x == "Certain infectious and parasitic diseases")
# try diverging barchart
ggplot(mort_comp_test, aes(x = year, y = nat_diff, label = nat_diff)) +
geom_bar(stat='identity', aes(fill=diff_type), width=.5)  +
scale_fill_manual(name="Compared to National Crude Rate",
labels = c("Above National Average", "Below National Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="calculated from available data'",
title= "I need a title") +
coord_flip()
# remove later
mort_comp_test <- mort_comp %>%
filter(State == "WI",
ICD.Chapter.x == "Certain infectious and parasitic diseases")
# try diverging barchart
ggplot(mort_comp_test, aes(x = Year, y = nat_diff, label = nat_diff)) +
geom_bar(stat='identity', aes(fill=diff_type), width=.5)  +
scale_fill_manual(name="Compared to National Crude Rate",
labels = c("Above National Average", "Below National Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="calculated from available data'",
title= "I need a title") +
coord_flip()
View(mort_comp_test)
# remove later
mort_comp_test <- mort_comp %>%
filter(State == "WI",
ICD.Chapter.x == "Certain infectious and parasitic diseases")
# try diverging barchart
ggplot(mort_comp_test, aes(x = Year.x, y = nat_diff, label = nat_diff)) +
geom_bar(stat='identity', aes(fill=diff_type), width=.5)  +
scale_fill_manual(name="Compared to National Crude Rate",
labels = c("Above National Average", "Below National Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="calculated from available data'",
title= "I need a title") +
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
mort <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module3/data/cleaned-cdc-mortality-1999-2010-2.csv", header = TRUE)
# collapse State rows
mort_national <- mort %>%
group_by(ICD.Chapter,Year) %>%
summarize(tot_deaths = sum(Deaths), tot_pop = sum(Population))
# create national average crude rates by cause over the years
mort_national$national_crude_rate <- round((mort_national$tot_deaths / mort_national$tot_pop) * 100000, 4)
# columns we want to paste together in both dataframes
cols <- c( 'ICD.Chapter' , 'Year')
# create that new column in mort_national
mort_national$join <- apply( mort_national[ , cols] , 1 , paste , collapse = "-" )
# create that new column in mort
mort$join <- apply( mort[ , cols] , 1 , paste , collapse = "-" )
# join with state level data in new df
mort_comp <- left_join(mort, mort_national, by = "join")
# create column that shows pos/neg difference from national crude rate
mort_comp$nat_diff <- round(mort_comp$national_crude_rate - mort_comp$Crude.Rate, 4)
# create pos/neg for diverage bar chart
mort_comp$diff_type <- ifelse(mort_comp$nat_diff < 0, "below", "above")
# remove later
mort_comp_test <- mort_comp %>%
filter(State == "WI",
ICD.Chapter.x == "Certain infectious and parasitic diseases")
# try diverging barchart
ggplot(mort_comp_test, aes(x = Year.x, y = nat_diff, label = nat_diff)) +
geom_bar(stat='identity', aes(fill=diff_type), width=.5)  +
scale_fill_manual(name="Compared to National Crude Rate",
labels = c("Above National Average", "Below National Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="calculated from available data'",
title= "I need a title") +
coord_flip()
# remove later
mort_comp_test <- mort_comp %>%
filter(State == "KY",
ICD.Chapter.x == "Certain infectious and parasitic diseases")
# try diverging barchart
ggplot(mort_comp_test, aes(x = Year.x, y = nat_diff, label = nat_diff)) +
geom_bar(stat='identity', aes(fill=diff_type), width=.5)  +
scale_fill_manual(name="Compared to National Crude Rate",
labels = c("Above National Average", "Below National Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="calculated from available data'",
title= "I need a title") +
coord_flip()
ggplot(mort_comp_test, aes( x = Year.x)) +
geom_line(aes(y = Crude.Rate), color = "darkred") +
geom_line(aes(y = national_crude_rate), color="steelblue", linetype="twodash")
# try diverging barchart
ggplot(mort_comp_test, aes(x = Year.x, y = nat_diff, label = nat_diff)) +
geom_bar(stat='identity', aes(fill=diff_type), width=.5)  +
scale_fill_manual(name="Compared to National Crude Rate",
labels = c("Above National Average", "Below National Average"),
values = c("above"="#00ba38", "below"="#f8766d")) +
labs(subtitle="calculated from available data'",
title= "I need a title")
